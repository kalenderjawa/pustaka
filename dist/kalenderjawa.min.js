import * as P from "@kalenderjawa/pancawara";
import { PASARAN, PASARAN_ARR } from "@kalenderjawa/pancawara";
import { PASARAN_ARR as PASARAN_ARR2 } from "@kalenderjawa/pancawara";
import * as D from "@kalenderjawa/saptawara";
import { DINTEN, DINTEN_ARR } from "@kalenderjawa/saptawara";
import { DINTEN_ARR as DINTEN_ARR2 } from "@kalenderjawa/saptawara";
const _ALIP = Symbol.for("alip");
const _EHE = Symbol.for("ehe");
const _JIMAWAL = Symbol.for("jimawal");
const _JE = Symbol.for("je");
const _DAL = Symbol.for("dal");
const _BE = Symbol.for("be");
const _WAWU = Symbol.for("wawu");
const _JIMAKIR = Symbol.for("jimakir");
const ALIP = { taun: "alip", neptu: 1, urutan: 1, cacah: 354 };
const EHE = { taun: "ehe", neptu: 5, urutan: 2, cacah: 355 };
const JIMAWAL = { taun: "jimawal", neptu: 3, urutan: 3, cacah: 354 };
const JE = { taun: "je", neptu: 7, urutan: 4, cacah: 354 };
const DAL = { taun: "dal", neptu: 4, urutan: 5, cacah: 355 };
const BE = { taun: "be", neptu: 2, urutan: 6, cacah: 354 };
const WAWU = { taun: "wawu", neptu: 6, urutan: 7, cacah: 354 };
const JIMAKIR = { taun: "jimakir", neptu: 3, urutan: 8, cacah: 355 };
const TAHUN_ARR = [ALIP, EHE, JIMAWAL, JE, DAL, BE, WAWU, JIMAKIR];
const ARANING_TAHUN_SEWINDU = /* @__PURE__ */ new Map();
ARANING_TAHUN_SEWINDU.set(_ALIP, ALIP);
ARANING_TAHUN_SEWINDU.set(_EHE, EHE);
ARANING_TAHUN_SEWINDU.set(_JIMAWAL, JIMAWAL);
ARANING_TAHUN_SEWINDU.set(_JE, JE);
ARANING_TAHUN_SEWINDU.set(_DAL, DAL);
ARANING_TAHUN_SEWINDU.set(_BE, BE);
ARANING_TAHUN_SEWINDU.set(_WAWU, WAWU);
ARANING_TAHUN_SEWINDU.set(_JIMAKIR, JIMAKIR);
const ASAPON = {
  taun: "alip",
  dinten: D.DINTEN.get(D._SELASA),
  pasaran: P.PASARAN.get(P._PON)
};
const ANENHING = {
  taun: "alip",
  dinten: D.DINTEN.get(D._SENEN),
  pasaran: P.PASARAN.get(P._PAHING)
};
const ALIP_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  kurup: ASAPON,
  awal: [
    1867,
    1875,
    1883,
    1891,
    1899,
    1907,
    1915,
    1923,
    1931,
    1939,
    1947,
    1955,
    1963,
    1971,
    1979
  ]
};
const EHE_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  kurup: ASAPON,
  awal: [
    1868,
    1876,
    1884,
    1892,
    1900,
    1908,
    1916,
    1924,
    1932,
    1940,
    1948,
    1956,
    1964,
    1972,
    1980
  ]
};
const JIMAWAL_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  kurup: ASAPON,
  awal: [
    1869,
    1877,
    1885,
    1893,
    1901,
    1909,
    1917,
    1925,
    1933,
    1941,
    1949,
    1957,
    1965,
    1973,
    1981
  ]
};
const JE_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  kurup: ASAPON,
  awal: [
    1870,
    1878,
    1886,
    1894,
    1902,
    1910,
    1918,
    1926,
    1934,
    1942,
    1950,
    1958,
    1966,
    1974,
    1982
  ]
};
const DAL_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  kurup: ASAPON,
  awal: [
    1871,
    1879,
    1887,
    1895,
    1903,
    1911,
    1919,
    1927,
    1935,
    1943,
    1951,
    1959,
    1967,
    1975,
    1983
  ]
};
const BE_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  kurup: ASAPON,
  awal: [
    1872,
    1880,
    1888,
    1896,
    1904,
    1912,
    1920,
    1928,
    1936,
    1944,
    1952,
    1960,
    1968,
    1976,
    1984
  ]
};
const WAWU_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  kurup: ASAPON,
  awal: [
    1873,
    1881,
    1889,
    1897,
    1905,
    1913,
    1921,
    1929,
    1937,
    1945,
    1953,
    1961,
    1969,
    1977,
    1985
  ]
};
const JIMAKIR_ASAPON = {
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  kurup: ASAPON,
  awal: [
    1874,
    1882,
    1890,
    1898,
    1906,
    1914,
    1922,
    1930,
    1938,
    1946,
    1954,
    1962,
    1970,
    1978,
    1986
  ]
};
const ALIP_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  kurup: ANENHING,
  awal: [
    1987,
    1995,
    2003,
    2011,
    2019,
    2027,
    2035,
    2043,
    2051,
    2059,
    2067,
    2075,
    2083,
    2091,
    2099
  ]
};
const EHE_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  kurup: ANENHING,
  awal: [
    1988,
    1996,
    2004,
    2012,
    2020,
    2028,
    2036,
    2044,
    2052,
    2060,
    2068,
    2076,
    2084,
    2092,
    2100
  ]
};
const JIMAWAL_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  kurup: ANENHING,
  awal: [
    1989,
    1997,
    2005,
    2013,
    2021,
    2029,
    2037,
    2045,
    2053,
    2061,
    2069,
    2077,
    2085,
    2093,
    2101
  ]
};
const JE_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  kurup: ANENHING,
  awal: [
    1990,
    1998,
    2006,
    2014,
    2022,
    2030,
    2038,
    2046,
    2054,
    2062,
    2070,
    2078,
    2086,
    2094,
    2102
  ]
};
const DAL_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  kurup: ANENHING,
  awal: [
    1991,
    1999,
    2007,
    2015,
    2023,
    2031,
    2039,
    2047,
    2055,
    2063,
    2071,
    2079,
    2087,
    2095,
    2103
  ]
};
const BE_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  kurup: ANENHING,
  awal: [
    1992,
    2e3,
    2008,
    2016,
    2024,
    2032,
    2040,
    2048,
    2056,
    2064,
    2072,
    2080,
    2088,
    2096,
    2104
  ]
};
const WAWU_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  kurup: ANENHING,
  awal: [
    1993,
    2001,
    2009,
    2017,
    2025,
    2033,
    2041,
    2049,
    2057,
    2065,
    2073,
    2081,
    2089,
    2097,
    2105
  ]
};
const JIMAKIR_ANENHING = {
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  kurup: ANENHING,
  awal: [
    1994,
    2002,
    2010,
    2018,
    2026,
    2034,
    2042,
    2050,
    2058,
    2066,
    2074,
    2082,
    2090,
    2098,
    2106
  ]
};
const KURUP_ASAPON_ANENHING = [
  ALIP_ASAPON,
  EHE_ASAPON,
  JIMAWAL_ASAPON,
  JE_ASAPON,
  DAL_ASAPON,
  BE_ASAPON,
  WAWU_ASAPON,
  JIMAKIR_ASAPON,
  ALIP_ANENHING,
  EHE_ANENHING,
  JIMAWAL_ANENHING,
  JE_ANENHING,
  DAL_ANENHING,
  BE_ANENHING,
  WAWU_ANENHING,
  JIMAKIR_ANENHING
];
const _MUKAROM = Symbol.for("mukarom");
const _SAPAR = Symbol.for("sapar");
const _ROBIULAWAL = Symbol.for("robiulawal");
const _ROBIULAKIR = Symbol.for("robiulakir");
const _JUMADILAWAL = Symbol.for("jumadilawal");
const _JUMADILAKIR = Symbol.for("jumadilakir");
const _ROJAB = Symbol.for("rojab");
const _SAKBAN = Symbol.for("sakban");
const _ROMADON = Symbol.for("romadon");
const _SAWAL = Symbol.for("sawal");
const _DULKODAH = Symbol.for("dulkodah");
const _DULKIJAH = Symbol.for("dulkijah");
const MUKAROM = {
  wulan: "mukarom",
  celukan: "rom",
  urutan: 1,
  cacah: [30]
};
const SAPAR = {
  wulan: "sapar",
  celukan: "par",
  urutan: 2,
  cacah: [29]
};
const ROBIULAWAL = {
  wulan: "robiulawal",
  celukan: "rowal",
  urutan: 3,
  cacah: [30]
};
const ROBIULAKIR = {
  wulan: "robiulakir",
  celukan: "rokir",
  urutan: 4,
  cacah: [29]
};
const JUMADILAWAL = {
  wulan: "jumadilawal",
  celukan: "juwal",
  urutan: 5,
  cacah: [30]
};
const JUMADILAKIR = {
  wulan: "jumadilakir",
  celukan: "jukir",
  urutan: 6,
  cacah: [29]
};
const ROJAB = {
  wulan: "rojab",
  celukan: "jab",
  urutan: 7,
  cacah: [30]
};
const SAKBAN = {
  wulan: "sakban",
  celukan: "ban",
  urutan: 8,
  cacah: [29]
};
const ROMADON = {
  wulan: "romadon",
  celukan: "don",
  urutan: 9,
  cacah: [30]
};
const SAWAL = {
  wulan: "sawal",
  celukan: "wal",
  urutan: 10,
  cacah: [29]
};
const DULKODAH = {
  wulan: "dulkodah",
  celukan: "dah",
  urutan: 11,
  cacah: [30]
};
const DULKIJAH = {
  wulan: "dulkijah",
  celukan: "jah",
  urutan: 12,
  cacah: [29, 30]
};
const ARANING_WULAN_SETAUN = /* @__PURE__ */ new Map();
ARANING_WULAN_SETAUN.set(_MUKAROM, MUKAROM);
ARANING_WULAN_SETAUN.set(_SAPAR, SAPAR);
ARANING_WULAN_SETAUN.set(_ROBIULAWAL, ROBIULAWAL);
ARANING_WULAN_SETAUN.set(_ROBIULAKIR, ROBIULAKIR);
ARANING_WULAN_SETAUN.set(_JUMADILAWAL, JUMADILAWAL);
ARANING_WULAN_SETAUN.set(_JUMADILAKIR, JUMADILAKIR);
ARANING_WULAN_SETAUN.set(_ROJAB, ROJAB);
ARANING_WULAN_SETAUN.set(_SAKBAN, SAKBAN);
ARANING_WULAN_SETAUN.set(_ROMADON, ROMADON);
ARANING_WULAN_SETAUN.set(_SAWAL, SAWAL);
ARANING_WULAN_SETAUN.set(_DULKODAH, DULKODAH);
ARANING_WULAN_SETAUN.set(_DULKIJAH, DULKIJAH);
const SASI_ARR = [
  MUKAROM,
  SAPAR,
  ROBIULAWAL,
  ROBIULAKIR,
  JUMADILAWAL,
  JUMADILAKIR,
  ROJAB,
  SAKBAN,
  ROMADON,
  SAWAL,
  DULKODAH,
  DULKIJAH
];
const _ROM_ALIP = Symbol.for("rom_alip");
const _ROM_EHE = Symbol.for("rom_ehe");
const _ROM_JIMAWAL = Symbol.for("rom_jimawal");
const _ROM_JE = Symbol.for("rom_je");
const _ROM_DAL = Symbol.for("rom_dal");
const _ROM_BE = Symbol.for("rom_be");
const _ROM_WAWU = Symbol.for("rom_wawu");
const _ROM_JIMAKIR = Symbol.for("rom_jimakir");
const ROM_JI_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 1,
  pasaran: 1
};
const ROM_MO_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 5,
  pasaran: 5
};
const ROM_LU_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 3,
  pasaran: 5
};
const ROM_TU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 7,
  pasaran: 4
};
const ROM_PAT_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 4,
  pasaran: 3
};
const ROM_RO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 2,
  pasaran: 3
};
const ROM_NEM_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 6,
  pasaran: 2
};
const ROM_LU_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  dino: 3,
  pasaran: 1
};
const ROM_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: ROM_JI_JI
};
const ROM_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: ROM_MO_MO
};
const ROM_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: ROM_LU_MO
};
const ROM_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: ROM_TU_PAT
};
const ROM_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: ROM_PAT_LU
};
const ROM_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: ROM_RO_LU
};
const ROM_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: ROM_NEM_RO
};
const ROM_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_MUKAROM),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: ROM_LU_JI
};
const RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_ALIP, ROM_ALIP);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_EHE, ROM_EHE);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_JIMAWAL, ROM_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_JE, ROM_JE);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_DAL, ROM_DAL);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_BE, ROM_BE);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_WAWU, ROM_WAWU);
RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI.set(_ROM_JIMAKIR, ROM_JIMAKIR);
const _PAR_ALIP = Symbol.for("par_alip");
const _PAR_EHE = Symbol.for("par_ehe");
const _PAR_JIMAWAL = Symbol.for("par_jimawal");
const _PAR_JE = Symbol.for("par_je");
const _PAR_DAL = Symbol.for("par_dal");
const _PAR_BE = Symbol.for("par_be");
const _PAR_WAWU = Symbol.for("par_wawu");
const _PAR_JIMAKIR = Symbol.for("par_jimakir");
const PAR_RO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 2,
  pasaran: 2
};
const PAR_NEM_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 6,
  pasaran: 1
};
const PAR_PAT_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 4,
  pasaran: 1
};
const PAR_JI_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 1,
  pasaran: 5
};
const PAR_MO_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 5,
  pasaran: 4
};
const PAR_LU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 3,
  pasaran: 4
};
const PAR_TU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 7,
  pasaran: 3
};
const PAR_PAT_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  dino: 4,
  pasaran: 2
};
const PAR_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: PAR_RO_RO
};
const PAR_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: PAR_NEM_JI
};
const PAR_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: PAR_PAT_JI
};
const PAR_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: PAR_JI_MO
};
const PAR_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: PAR_MO_PAT
};
const PAR_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: PAR_LU_PAT
};
const PAR_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: PAR_TU_LU
};
const PAR_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_SAPAR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: PAR_PAT_RO
};
const RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_ALIP, PAR_ALIP);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_EHE, PAR_EHE);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_JIMAWAL, PAR_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_JE, PAR_JE);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_DAL, PAR_DAL);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_BE, PAR_BE);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_WAWU, PAR_WAWU);
RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI.set(_PAR_JIMAKIR, PAR_JIMAKIR);
const _ROWAL_ALIP = Symbol.for("rowal_alip");
const _ROWAL_EHE = Symbol.for("rowal_ehe");
const _ROWAL_JIMAWAL = Symbol.for("rowal_jimawal");
const _ROWAL_JE = Symbol.for("rowal_je");
const _ROWAL_DAL = Symbol.for("rowal_dal");
const _ROWAL_BE = Symbol.for("rowal_be");
const _ROWAL_WAWU = Symbol.for("rowal_wawu");
const _ROWAL_JIMAKIR = Symbol.for("rowal_jimakir");
const ROWAL_PAT_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 4,
  pasaran: 5
};
const ROWAL_JI_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 1,
  pasaran: 4
};
const ROWAL_NEM_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 6,
  pasaran: 4
};
const ROWAL_LU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 3,
  pasaran: 3
};
const ROWAL_TU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 7,
  pasaran: 2
};
const ROWAL_MO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 5,
  pasaran: 2
};
const ROWAL_RO_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 2,
  pasaran: 1
};
const ROWAL_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  dino: 6,
  pasaran: 5
};
const ROWAL_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: ROWAL_PAT_MO
};
const ROWAL_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: ROWAL_JI_PAT
};
const ROWAL_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: ROWAL_NEM_PAT
};
const ROWAL_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: ROWAL_LU_LU
};
const ROWAL_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: ROWAL_TU_RO
};
const ROWAL_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: ROWAL_MO_RO
};
const ROWAL_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: ROWAL_RO_JI
};
const ROWAL_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: ROWAL_NEM_MO
};
const RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_ALIP, ROWAL_ALIP);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_EHE, ROWAL_EHE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_JIMAWAL, ROWAL_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_JE, ROWAL_JE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_DAL, ROWAL_DAL);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_BE, ROWAL_BE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_WAWU, ROWAL_WAWU);
RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI.set(_ROWAL_JIMAKIR, ROWAL_JIMAKIR);
const _ROKIR_ALIP = Symbol.for("rokir_alip");
const _ROKIR_EHE = Symbol.for("rokir_ehe");
const _ROKIR_JIMAWAL = Symbol.for("rokir_jimawal");
const _ROKIR_JE = Symbol.for("rokir_je");
const _ROKIR_DAL = Symbol.for("rokir_dal");
const _ROKIR_BE = Symbol.for("rokir_be");
const _ROKIR_WAWU = Symbol.for("rokir_wawu");
const _ROKIR_JIMAKIR = Symbol.for("rokir_jimakir");
const ROKIR_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 6,
  pasaran: 5
};
const ROKIR_LU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 3,
  pasaran: 4
};
const ROKIR_JI_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 1,
  pasaran: 4
};
const ROKIR_MO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 5,
  pasaran: 3
};
const ROKIR_RO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 2,
  pasaran: 2
};
const ROKIR_TU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 1,
  pasaran: 2
};
const ROKIR_PAT_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 4,
  pasaran: 1
};
const ROKIR_JI_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  dino: 1,
  pasaran: 5
};
const ROKIR_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: ROKIR_NEM_MO
};
const ROKIR_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: ROKIR_LU_PAT
};
const ROKIR_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: ROKIR_JI_PAT
};
const ROKIR_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: ROKIR_MO_LU
};
const ROKIR_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: ROKIR_RO_RO
};
const ROKIR_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: ROKIR_TU_RO
};
const ROKIR_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: ROKIR_PAT_JI
};
const ROKIR_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_ROBIULAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: ROKIR_JI_MO
};
const RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_ALIP, ROKIR_ALIP);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_EHE, ROKIR_EHE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_JIMAWAL, ROKIR_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_JE, ROKIR_JE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_DAL, ROKIR_DAL);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_BE, ROKIR_BE);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_WAWU, ROKIR_WAWU);
RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI.set(_ROKIR_JIMAKIR, ROKIR_JIMAKIR);
const _JUWAL_ALIP = Symbol.for("juwal_alip");
const _JUWAL_EHE = Symbol.for("juwal_ehe");
const _JUWAL_JIMAWAL = Symbol.for("juwal_jimawal");
const _JUWAL_JE = Symbol.for("juwal_je");
const _JUWAL_DAL = Symbol.for("juwal_dal");
const _JUWAL_BE = Symbol.for("juwal_be");
const _JUWAL_WAWU = Symbol.for("juwal_wawu");
const _JUWAL_JIMAKIR = Symbol.for("juwal_jimakir");
const JUWAL_TU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 7,
  pasaran: 4
};
const JUWAL_PAT_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 4,
  pasaran: 3
};
const JUWAL_RO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 2,
  pasaran: 3
};
const JUWAL_NEM_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 6,
  pasaran: 2
};
const JUWAL_LU_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 3,
  pasaran: 1
};
const JUWAL_JI_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 1,
  pasaran: 1
};
const JUWAL_MO_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 5,
  pasaran: 5
};
const JUWAL_RO_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  dino: 2,
  pasaran: 4
};
const JUWAL_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: JUWAL_TU_PAT
};
const JUWAL_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: JUWAL_PAT_LU
};
const JUWAL_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: JUWAL_RO_LU
};
const JUWAL_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: JUWAL_NEM_RO
};
const JUWAL_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: JUWAL_LU_JI
};
const JUWAL_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: JUWAL_JI_JI
};
const JUWAL_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: JUWAL_MO_MO
};
const JUWAL_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: JUWAL_RO_PAT
};
const RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_ALIP, JUWAL_ALIP);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_EHE, JUWAL_EHE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_JIMAWAL, JUWAL_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_JE, JUWAL_JE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_DAL, JUWAL_DAL);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_BE, JUWAL_BE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_WAWU, JUWAL_WAWU);
RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI.set(_JUWAL_JIMAKIR, JUWAL_JIMAKIR);
const _JUKIR_ALIP = Symbol.for("jukir_alip");
const _JUKIR_EHE = Symbol.for("jukir_ehe");
const _JUKIR_JIMAWAL = Symbol.for("jukir_jimawal");
const _JUKIR_JE = Symbol.for("jukir_je");
const _JUKIR_DAL = Symbol.for("jukir_dal");
const _JUKIR_BE = Symbol.for("jukir_be");
const _JUKIR_WAWU = Symbol.for("jukir_wawu");
const _JUKIR_JIMAKIR = Symbol.for("jukir_jimakir");
const JUKIR_RO_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 2,
  pasaran: 4
};
const JUKIR_NEM_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 6,
  pasaran: 3
};
const JUKIR_PAT_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 4,
  pasaran: 3
};
const JUKIR_JI_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 1,
  pasaran: 2
};
const JUKIR_MO_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 5,
  pasaran: 1
};
const JUKIR_LU_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 3,
  pasaran: 1
};
const JUKIR_TU_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 7,
  pasaran: 5
};
const JUKIR_PAT_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  dino: 4,
  pasaran: 4
};
const JUKIR_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: JUKIR_RO_PAT
};
const JUKIR_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: JUKIR_NEM_LU
};
const JUKIR_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: JUKIR_PAT_LU
};
const JUKIR_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: JUKIR_JI_RO
};
const JUKIR_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: JUKIR_MO_JI
};
const JUKIR_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: JUKIR_LU_JI
};
const JUKIR_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: JUKIR_TU_MO
};
const JUKIR_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_JUMADILAKIR),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: JUKIR_PAT_PAT
};
const RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_ALIP, JUKIR_ALIP);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_EHE, JUKIR_EHE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_JIMAWAL, JUKIR_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_JE, JUKIR_JE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_DAL, JUKIR_DAL);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_BE, JUKIR_BE);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_WAWU, JUKIR_WAWU);
RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI.set(_JUKIR_JIMAKIR, JUKIR_JIMAKIR);
const _JAB_ALIP = Symbol.for("jab_alip");
const _JAB_EHE = Symbol.for("jab_ehe");
const _JAB_JIMAWAL = Symbol.for("jab_jimawal");
const _JAB_JE = Symbol.for("jab_je");
const _JAB_DAL = Symbol.for("jab_dal");
const _JAB_BE = Symbol.for("jab_be");
const _JAB_WAWU = Symbol.for("jab_wawu");
const _JAB_JIMAKIR = Symbol.for("jab_jimakir");
const JAB_LU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 3,
  pasaran: 3
};
const JAB_TU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 7,
  pasaran: 2
};
const JAB_MO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 5,
  pasaran: 2
};
const JAB_RO_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 2,
  pasaran: 1
};
const JAB_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 6,
  pasaran: 5
};
const JAB_PAT_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 4,
  pasaran: 5
};
const JAB_JI_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 1,
  pasaran: 4
};
const JAB_MO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  dino: 5,
  pasaran: 3
};
const JAB_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: JAB_LU_LU
};
const JAB_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: JAB_TU_RO
};
const JAB_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: JAB_MO_RO
};
const JAB_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: JAB_RO_JI
};
const JAB_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: JAB_NEM_MO
};
const JAB_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: JAB_PAT_MO
};
const JAB_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: JAB_JI_PAT
};
const JAB_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_ROJAB),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: JAB_MO_LU
};
const RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_ALIP, JAB_ALIP);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_EHE, JAB_EHE);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_JIMAWAL, JAB_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_JE, JAB_JE);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_DAL, JAB_DAL);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_BE, JAB_BE);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_WAWU, JAB_WAWU);
RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI.set(_JAB_JIMAKIR, JAB_JIMAKIR);
const _BAN_ALIP = Symbol.for("ban_alip");
const _BAN_EHE = Symbol.for("ban_ehe");
const _BAN_JIMAWAL = Symbol.for("ban_jimawal");
const _BAN_JE = Symbol.for("ban_je");
const _BAN_DAL = Symbol.for("ban_dal");
const _BAN_BE = Symbol.for("ban_be");
const _BAN_WAWU = Symbol.for("ban_wawu");
const _BAN_JIMAKIR = Symbol.for("ban_jimakir");
const BAN_MO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 5,
  pasaran: 3
};
const BAN_RO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 2,
  pasaran: 2
};
const BAN_TU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 7,
  pasaran: 2
};
const BAN_PAT_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 4,
  pasaran: 1
};
const BAN_JI_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 1,
  pasaran: 5
};
const BAN_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 6,
  pasaran: 5
};
const BAN_LU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 3,
  pasaran: 4
};
const BAN_TU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  dino: 7,
  pasaran: 3
};
const BAN_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: BAN_MO_LU
};
const BAN_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: BAN_RO_RO
};
const BAN_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: BAN_TU_RO
};
const BAN_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: BAN_PAT_JI
};
const BAN_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: BAN_JI_MO
};
const BAN_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: BAN_NEM_MO
};
const BAN_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: BAN_LU_PAT
};
const BAN_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_SAKBAN),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: BAN_TU_LU
};
const RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_ALIP, BAN_ALIP);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_EHE, BAN_EHE);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_JIMAWAL, BAN_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_JE, BAN_JE);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_DAL, BAN_DAL);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_BE, BAN_BE);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_WAWU, BAN_WAWU);
RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI.set(_BAN_JIMAKIR, BAN_JIMAKIR);
const _DON_ALIP = Symbol.for("don_alip");
const _DON_EHE = Symbol.for("don_ehe");
const _DON_JIMAWAL = Symbol.for("don_jimawal");
const _DON_JE = Symbol.for("don_je");
const _DON_DAL = Symbol.for("don_dal");
const _DON_BE = Symbol.for("don_be");
const _DON_WAWU = Symbol.for("don_wawu");
const _DON_JIMAKIR = Symbol.for("don_jimakir");
const DON_NEM_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 6,
  pasaran: 2
};
const DON_LU_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 3,
  pasaran: 1
};
const DON_JI_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 1,
  pasaran: 1
};
const DON_MO_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 5,
  pasaran: 5
};
const DON_RO_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 2,
  pasaran: 4
};
const DON_TU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 7,
  pasaran: 4
};
const DON_PAT_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 4,
  pasaran: 3
};
const DON_JI_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  dino: 1,
  pasaran: 2
};
const DON_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: DON_NEM_RO
};
const DON_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: DON_LU_JI
};
const DON_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: DON_JI_JI
};
const DON_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: DON_MO_MO
};
const DON_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: DON_RO_PAT
};
const DON_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: DON_TU_PAT
};
const DON_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: DON_PAT_LU
};
const DON_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_ROMADON),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: DON_JI_RO
};
const RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_ALIP, DON_ALIP);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_EHE, DON_EHE);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_JIMAWAL, DON_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_JE, DON_JE);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_DAL, DON_DAL);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_BE, DON_BE);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_WAWU, DON_WAWU);
RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI.set(_DON_JIMAKIR, DON_JIMAKIR);
const _WAL_ALIP = Symbol.for("wal_alip");
const _WAL_EHE = Symbol.for("wal_ehe");
const _WAL_JIMAWAL = Symbol.for("wal_jimawal");
const _WAL_JE = Symbol.for("wal_je");
const _WAL_DAL = Symbol.for("wal_dal");
const _WAL_BE = Symbol.for("wal_be");
const _WAL_WAWU = Symbol.for("wal_wawu");
const _WAL_JIMAKIR = Symbol.for("wal_jimakir");
const WAL_JI_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 1,
  pasaran: 2
};
const WAL_MO_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 5,
  pasaran: 1
};
const WAL_LU_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 3,
  pasaran: 1
};
const WAL_TU_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 7,
  pasaran: 5
};
const WAL_PAT_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 4,
  pasaran: 4
};
const WAL_RO_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 2,
  pasaran: 4
};
const WAL_NEM_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 6,
  pasaran: 3
};
const WAL_LU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  dino: 3,
  pasaran: 2
};
const WAL_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: WAL_JI_RO
};
const WAL_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: WAL_MO_JI
};
const WAL_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: WAL_LU_JI
};
const WAL_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: WAL_TU_MO
};
const WAL_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: WAL_PAT_PAT
};
const WAL_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: WAL_RO_PAT
};
const WAL_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: WAL_NEM_LU
};
const WAL_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_SAWAL),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: WAL_LU_RO
};
const RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_ALIP, WAL_ALIP);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_EHE, WAL_EHE);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_JIMAWAL, WAL_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_JE, WAL_JE);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_DAL, WAL_DAL);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_BE, WAL_BE);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_WAWU, WAL_WAWU);
RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI.set(_WAL_JIMAKIR, WAL_JIMAKIR);
const _DAH_ALIP = Symbol.for("dah_alip");
const _DAH_EHE = Symbol.for("dah_ehe");
const _DAH_JIMAWAL = Symbol.for("dah_jimawal");
const _DAH_JE = Symbol.for("dah_je");
const _DAH_DAL = Symbol.for("dah_dal");
const _DAH_BE = Symbol.for("dah_be");
const _DAH_WAWU = Symbol.for("dah_wawu");
const _DAH_JIMAKIR = Symbol.for("dah_jimakir");
const DAH_RO_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 2,
  pasaran: 1
};
const DAH_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 6,
  pasaran: 5
};
const DAH_PAT_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 4,
  pasaran: 5
};
const DAH_JI_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 1,
  pasaran: 4
};
const DAH_MO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 5,
  pasaran: 3
};
const DAH_LU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 3,
  pasaran: 3
};
const DAH_TU_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 7,
  pasaran: 2
};
const DAH_PAT_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  dino: 4,
  pasaran: 1
};
const DAH_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: DAH_RO_JI
};
const DAH_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: DAH_NEM_MO
};
const DAH_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: DAH_PAT_MO
};
const DAH_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: DAH_JI_PAT
};
const DAH_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: DAH_MO_LU
};
const DAH_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: DAH_LU_LU
};
const DAH_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: DAH_TU_RO
};
const DAH_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKODAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: DAH_PAT_JI
};
const RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_ALIP, DAH_ALIP);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_EHE, DAH_EHE);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_JIMAWAL, DAH_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_JE, DAH_JE);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_DAL, DAH_DAL);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_BE, DAH_BE);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_WAWU, DAH_WAWU);
RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI.set(_DAH_JIMAKIR, DAH_JIMAKIR);
const _JAH_ALIP = Symbol.for("jah_alip");
const _JAH_EHE = Symbol.for("jah_ehe");
const _JAH_JIMAWAL = Symbol.for("jah_jimawal");
const _JAH_JE = Symbol.for("jah_je");
const _JAH_DAL = Symbol.for("jah_dal");
const _JAH_BE = Symbol.for("jah_be");
const _JAH_WAWU = Symbol.for("jah_wawu");
const _JAH_JIMAKIR = Symbol.for("jah_jimakir");
const JAH_PAT_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 4,
  pasaran: 1
};
const JAH_JI_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 1,
  pasaran: 5
};
const JAH_NEM_MO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 6,
  pasaran: 5
};
const JAH_LU_PAT = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 3,
  pasaran: 4
};
const JAH_TU_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 7,
  pasaran: 3
};
const JAH_MO_LU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 5,
  pasaran: 3
};
const JAH_RO_RO = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 2,
  pasaran: 2
};
const JAH_NEM_JI = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  dino: 6,
  pasaran: 1
};
const JAH_ALIP = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_ALIP),
  rumus: JAH_PAT_JI
};
const JAH_EHE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_EHE),
  rumus: JAH_JI_MO
};
const JAH_JIMAWAL = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAWAL),
  rumus: JAH_NEM_MO
};
const JAH_JE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JE),
  rumus: JAH_LU_PAT
};
const JAH_DAL = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_DAL),
  rumus: JAH_TU_LU
};
const JAH_BE = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_BE),
  rumus: JAH_MO_LU
};
const JAH_WAWU = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_WAWU),
  rumus: JAH_RO_RO
};
const JAH_JIMAKIR = {
  wulan: ARANING_WULAN_SETAUN.get(_DULKIJAH),
  taun: ARANING_TAHUN_SEWINDU.get(_JIMAKIR),
  rumus: JAH_NEM_JI
};
const RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI = /* @__PURE__ */ new Map();
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_ALIP, JAH_ALIP);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_EHE, JAH_EHE);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_JIMAWAL, JAH_JIMAWAL);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_JE, JAH_JE);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_DAL, JAH_DAL);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_BE, JAH_BE);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_WAWU, JAH_WAWU);
RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI.set(_JAH_JIMAKIR, JAH_JIMAKIR);
function _SengkalaMap() {
  return new Map([
    ...RUMUS_APALAN_AWAL_BULAN_MUKAROM_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_SAPAR_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_ROBIULAWAL_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_ROBIULAKIR_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_JUMADILAWAL_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_JUMADILAKIR_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_ROJAB_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_SAKBAN_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_ROMADON_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_SAWAL_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_DULKODAH_ABADI,
    ...RUMUS_APALAN_AWAL_BULAN_DULKIJAH_ABADI
  ]);
}
const SengkalaMap = _SengkalaMap();
async function konversiHari(h, dn) {
  const _xH = dn + h - 1;
  let xH = 0;
  if (_xH > 7) {
    xH = _xH - 7;
  } else {
    xH = _xH;
  }
  return new Promise((resolve, reject) => {
    DINTEN.forEach((value, key, map) => {
      if (value.urutan === xH) {
        resolve(value);
      }
    });
    reject(new Error("Error konversiHari"));
  });
}
async function konversiPasaran(p, ps) {
  const _xP = ps + p - 1;
  let xP = 0;
  if (_xP > 5) {
    xP = _xP - 5;
  } else {
    xP = _xP;
  }
  return new Promise((resolve, reject) => {
    PASARAN.forEach((value, key, map) => {
      if (value.urutan === xP) {
        resolve(value);
      }
    });
    reject(new Error("Error konversiPasaran"));
  });
}
function cariTaunRegistry(taun) {
  return ARANING_TAHUN_SEWINDU.has(Symbol.for(taun)) ? ARANING_TAHUN_SEWINDU.get(Symbol.for(taun)) : void 0;
}
function cariWulanRegistry(wulan) {
  let _wulan = "";
  if (typeof wulan === "string") {
    _wulan = wulan;
  } else if (typeof wulan === "number") {
    const _sasi = SASI_ARR[wulan - 1];
    if (_sasi) {
      _wulan = _sasi.wulan;
    }
  }
  return ARANING_WULAN_SETAUN.has(Symbol.for(_wulan)) ? ARANING_WULAN_SETAUN.get(Symbol.for(_wulan)) : void 0;
}
function cariRumusWulanTaun(key, q) {
  if (SengkalaMap.has(Symbol.for(key))) {
    const _RWT = SengkalaMap.get(Symbol.for(key));
    const _K = { query: q };
    return { ..._RWT, ..._K };
  } else {
    return void 0;
  }
}
const version$1 = "1.0.1";
const pkg = {
  version: version$1
};
async function cariKurupTaun(_q) {
  const _qi = parseInt(_q.toString());
  return new Promise((resolve, reject) => {
    for (const _kurup of KURUP_ASAPON_ANENHING) {
      for (const query of _kurup.awal) {
        if (query === _qi) {
          resolve(_kurup);
          return;
        }
      }
    }
    reject(new Error("Error cariKurupTaun"));
  });
}
async function cariRumusAbadiAwalBulanTahunJawa(wulan, taun) {
  return new Promise((resolve, reject) => {
    cariKurupTaun(taun).then((r) => {
      const wulanMap = cariWulanRegistry(wulan);
      const taunMap = cariTaunRegistry(r.taun.taun);
      if (wulanMap !== void 0 && taunMap !== void 0) {
        const KEY_RUMUS = `${wulanMap.celukan}_${taunMap.taun}`;
        const RWT = cariRumusWulanTaun(KEY_RUMUS, {
          wulan,
          taun
        });
        if (RWT !== void 0) {
          if (wulanMap.urutan === 12 && "rumus" in RWT) {
            const correctedWulan = {
              ...wulanMap,
              cacah: [r.taun.cacah === 354 ? 29 : 30]
            };
            resolve({ ...RWT, wulan: correctedWulan });
            return;
          }
          resolve(RWT);
        }
      }
      reject(new Error("error cariRumusAbadi"));
    }).catch((e) => reject(e));
  });
}
async function cariHariPasaranAwalBulanTahunJawa(w, t) {
  const [sengkalaTaun, sengkalaRumus] = await Promise.all([
    cariKurupTaun(t),
    cariRumusAbadiAwalBulanTahunJawa(w, t)
  ]);
  const [kH, kP] = await Promise.all([
    konversiHari(
      sengkalaRumus && "rumus" in sengkalaRumus ? sengkalaRumus.rumus.dino : 0,
      sengkalaTaun.kurup.dinten.urutan
    ),
    konversiPasaran(
      sengkalaRumus && "rumus" in sengkalaRumus ? sengkalaRumus.rumus.pasaran : 0,
      sengkalaTaun.kurup.pasaran.urutan
    )
  ]);
  const i = {
    taun: sengkalaTaun.taun.taun,
    kurup: `${sengkalaTaun.kurup.taun} ${sengkalaTaun.kurup.dinten.dino} ${sengkalaTaun.kurup.pasaran.pasaran}`
  };
  return { w, t, i, kH, kP };
}
async function sasi(s, th) {
  const [{ kH, kP }, dat] = await Promise.all([
    cariHariPasaranAwalBulanTahunJawa(s, th),
    cariRumusAbadiAwalBulanTahunJawa(s, th)
  ]);
  const _m = [];
  let i = 0;
  let _x = kP.urutan;
  let _s = kH.urutan;
  do {
    i = i + 1;
    const { ps, pn } = koreksiPasaran(_x);
    _m.push({
      [i]: { dinten: koreksiDino(_s), pasaran: ps, neptu: pn }
    });
    _x = _x + 1;
    _s = _s + 1;
  } while (i < (dat && "wulan" in dat && dat.wulan ? dat.wulan.cacah[0] : 0));
  const sMap = /* @__PURE__ */ new Map();
  const sKey = {
    sasi: dat && "wulan" in dat && dat.wulan ? dat.wulan.wulan : "",
    taun: th
  };
  sMap.set(sKey, _m);
  return { k: sKey, s: sMap };
}
function koreksiDino(d) {
  let dc = 0;
  if (d > 7) {
    dc = d % 7;
    if (dc === 0) {
      dc = 7;
    }
  } else {
    dc = d;
  }
  return DINTEN_ARR[dc - 1]["dino"];
}
function koreksiPasaran(p) {
  let pc = 0;
  if (p > 5) {
    pc = p % 5;
    if (pc === 0) {
      pc = 5;
    }
  } else {
    pc = p;
  }
  return {
    ps: PASARAN_ARR[pc - 1]["pasaran"],
    pn: PASARAN_ARR[pc - 1]["neptu"]
  };
}
function version() {
  return `v${pkg.version}`;
}
export {
  DINTEN_ARR2 as araningDinten,
  PASARAN_ARR2 as araningPasaran,
  SASI_ARR as araningSasi,
  cariHariPasaranAwalBulanTahunJawa,
  cariKurupTaun as cariKurupTahunJawa,
  cariRumusAbadiAwalBulanTahunJawa,
  sasi,
  TAHUN_ARR as tahunJawa,
  version as versi
};
//# sourceMappingURL=kalenderjawa.min.js.map
